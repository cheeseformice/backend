access_log off;

geo $http_cf_connecting_ip $whitelist {
	default 0;
	# CIDR in the list below are not limited
	${MICESTATS_IP}/32 1;
}

map $whitelist $limit {
	0 $http_cf_connecting_ip;
	1 "";
}

limit_req_zone $limit zone=apiip:20m rate=10r/s;
limit_req_zone $http_cf_connecting_ip zone=frontip:20m rate=5r/s;

proxy_cache_path /data/nginx/cache keys_zone=cache_zone:20m inactive=120m;

server {
	listen 80;

	include /etc/nginx/conf.d/cloudflare-allow.conf;
	deny all;

	# /api
	location /api/tfm/ip {
		# TFM API request
		limit_req zone=apiip burst=12 delay=6;

		set $service tfmapi;
		try_files /dev/null @forward;
	}

	location /api {
		# API request
		limit_req zone=apiip burst=12 delay=6;

		set $service router;
		try_files /dev/null @forward;
	}

	location ~ ^/(css|favicon.ico|fonts|icons|img|js|arc-sw.js) {
		# Serve static files from the frontend
		limit_req zone=frontip burst=5;

		set $service frontend;
		try_files /dev/null @forward;
	}

	location / {
		# Any other path goes to http://frontend/index.html
		limit_req zone=frontip burst=5;

		set $service frontend;
		rewrite ^ /index.html break;
		try_files /dev/null @forward;
	}

	location @forward {
		resolver 127.0.0.11 valid=10s; # Docker DNS resolver

		# Custom headers
		proxy_set_header X-Real-IP $http_cf_connecting_ip;
		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
		proxy_set_header Host $http_host;
		proxy_set_header X-Nginx-Proxy true;

		# Allow fast streaming HTTP/1.1 pipes (keep-alive, unbuffered)
		proxy_http_version 1.1;
		proxy_request_buffering off;
		proxy_buffering off;

		# Allow websockets
		proxy_set_header connection "upgrade";
		proxy_set_header upgrade $http_upgrade;

		# Forward to any upstream service
		proxy_pass http://$service:80;
	}
}